import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

//When downloading image make sure stored outside of source folder
public class Pacman {
//variables
	private int x, y;
	private int xa = 1, ya = 1;
	private int dir = 0;
	private BufferedImage[][] animations;
	private BufferedImage img = null;
	// animations controls
	private int aniTick, aniIndex, aniSpeed = 15;
	// directions
	private boolean right, left, up, down;
	// diameter of pacman
	private int D = 50;

	public Pacman() {
		importImg();
		loadAnimation();
	}

	private void loadAnimation() {
		animations = new BufferedImage[4][3];
		for (int j = 0; j < animations.length; j++) {
			for (int i = 0; i < animations[j].length; i++) {
				animations[j][i] = img.getSubimage(10 + (i * 95), 20 + (j * 80), 75, 75);
			}
		}
	}

	private void importImg() {
		try {
			img = ImageIO.read(new File("Pacman_Sprites.png"));

		} catch (IOException e) {
			System.out.println("No Image");
		}
	}

	private void updateAniTick() {
		aniTick++;
		if (aniTick >= aniSpeed) {
			aniTick = 0;
			aniIndex++;
			if (aniIndex >= 3)
				aniIndex = 0;
		}
	}

	public void keyPressed(KeyEvent e) {
		switch (e.getKeyCode()) {
		case KeyEvent.VK_W:
			up = true;
			dir = 1;
			break;
		case KeyEvent.VK_A:
			left = true;
			dir = 2;
			break;
		case KeyEvent.VK_S:
			down = true;
			dir = 3;
			break;
		case KeyEvent.VK_D:
			right = true;
			dir = 0;
			break;
		}
	}

	public void keyReleased(KeyEvent e) {
		switch (e.getKeyCode()) {
		case KeyEvent.VK_W:
			up = false;
			break;
		case KeyEvent.VK_A:
			left = false;
			break;
		case KeyEvent.VK_S:
			down = false;
			break;
		case KeyEvent.VK_D:
			right = false;
			break;
		}
	}

	public void move() {
		switch (dir) {
		case 0:
			if (right = true)
				xa = 1;
			x += xa;
			break;
		case 1:
			if (up == true)
				ya = -1;
			y += ya;
			break;
		case 2:
			if (left == true)
				xa = -1;
			x += xa;
			break;
		case 3:
			if (down == true)
				ya = 1;
			y += ya;
			break;
		}
	}

	public void paint(Graphics g) {
		updateAniTick();
		switch (dir) {
		// right
		case 0:
			g.drawImage(animations[dir][aniIndex], x, y, D, D, null);
			break;
		case 1:
			g.drawImage(animations[dir][aniIndex], x, y, D, D, null);
			break;
		case 2:
			g.drawImage(animations[dir][aniIndex], x, y, D, D, null);
			break;
		case 3:
			g.drawImage(animations[dir][aniIndex], x, y, D, D, null);
			break;
		}
	}
}
