
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;


public class Pacman {
//variables
private int x,y;
private int xa = 1, ya = 1;
	private int direction=0;
	private BufferedImage[][] animations;
	private BufferedImage img;
	private int aniTick, aniIndex, aniSpeed = 15;
	private boolean right,left,up,down;
	private int D = 70;
	
	public int [][] Map_X = new int [10][10];
	
	
	
	//constructor
	public Pacman()
	{
		importImg();
		loadAnimation();
		
	}
	
	private void loadAnimation() {
		animations = new BufferedImage[4][3];
		for (int j = 0; j < animations.length; j++) {
			for (int i = 0; i < animations[j].length; i++) {
				animations[j][i] = img.getSubimage(10+(i*95),20+(j*80),75,75);
			}
		}
	}

	private void importImg() {
		InputStream is = getClass().getResourceAsStream("/Pacman_Sprites.png");

		try {
			img = ImageIO.read(is);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	private void updateAniTick() {
		aniTick++;
		if (aniTick >= aniSpeed) {
			aniTick = 0;
			aniIndex++;
			if (aniIndex >= 3)
				aniIndex = 0;
		}	
	} 

		public void keyPressed(KeyEvent e){
			 switch(e.getKeyCode()) {
			 case KeyEvent.VK_W:
				 up=true;
				 direction=1;
				 break;
			 case KeyEvent.VK_A:
				 left = true;
				 direction=2;
				 break;
			 case KeyEvent.VK_S:
				 down = true;
				 direction=3;		
				 break;	 
			 case KeyEvent.VK_D:
				 right = true;
				 direction=0;	
				 break;	 
			 }	 
		}
		
		public void keyReleased(KeyEvent e){
			 switch(e.getKeyCode()) {
			 case KeyEvent.VK_W:
				 up = false;
				 break;
			 case KeyEvent.VK_A:
				 left = false;
				 break;
			 case KeyEvent.VK_S:
				 down = false;	
				 break;	 
			 case KeyEvent.VK_D:
				 right = false;
				 break;	 
			 }
		}

	public void move() {
		
		switch(direction) {
		case 0:
			if(right=true) {
				xa = 1;
				x+=xa;	
			}
			break;
		case 1:
			if(up==true)
			 ya = -1;
			 y+=ya; 
			break;
		case 2:
			if(left==true)
			 xa = -1;
			 x+=xa; 
			break;
		case 3:
			if(down==true)
			 ya = 1;
			 y+=ya; 
			break;		
		}
	}

	 public void paint(Graphics g) {
		
		 updateAniTick();
		 switch(direction) {
		 //right
		 case 0:
			 g.drawImage(animations[direction][aniIndex],x,y,D,D,null);
		 break;
		 case 1:
			 g.drawImage(animations[direction][aniIndex],x,y,D,D,null);
		 break;
		 case 2:
			 g.drawImage(animations[direction][aniIndex],x,y,D,D,null);
		 break;
		 case 3:
			 g.drawImage(animations[direction][aniIndex],x,y,D,D,null);
		 break;
		 }
		 
		 
	 }
	
}

