import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.*;
import java.io.*;
import java.awt.geom.RoundRectangle2D;



public class Shadow {
	//variables 
	 private int x =500;
	 private int y =400;
	 private int xa=1;
	 private int ya=1;
	 private int d=100;
	 
	 private int mx = 0;
	 private int my = 0;
	 private int pacx = 15;
	 private int pacy = 17;
	// private Lvl l = new Lvl();
	 private Map[][] grid = l.getGrid();
	 private boolean right = false, left = false;
	 private boolean up = false, down = false;
	 
	 
	 //packman
	 private BufferedImage imgSLR = null;
	 private BufferedImage imgSUD = null;
	 
	 public void keyPressed(KeyEvent e) {
		 if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			 if(!grid[pacx+1][pacy].getLeft()) right=true;
			 }
		 
		 if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			 if(!grid[pacx-1][pacy].getRight()) left=true;
			 }
		 
		 if(e.getKeyCode() == KeyEvent.VK_UP) {
			 if(!grid[pacx][pacy+1].getBottom()) up=true;
			 }
		 
		 if(e.getKeyCode() == KeyEvent.VK_DOWN) {
			 if(!grid[pacx+1][pacy-1].getTop()) down=true;
			 }
		 
		 }
	 
	 public void keyReleased(KeyEvent e) {
		 if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			 right = false;
			 x=0;
			 }
		 
		 if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			 left = false;
			 x = 0;
			 }
		 
		 if(e.getKeyCode() == KeyEvent.VK_UP) {
			 up = false;
			 y = 0;
			 }		
		 
		 if(e.getKeyCode() == KeyEvent.VK_DOWN) {
			 down = false;
			 y = 0;
			 }
	 }
	 
	 public void move() {
		 if(right) x=30;
		 else if(left) x=-30;
		 else if(up) y=30;
		 else if(down) y=-30;
	 }
		 public Shadow() {
		 try {
				imgSLR = ImageIO.read(new File("SLR.png"));
			} catch (IOException e)
			{
				System.out.println("No Image");
			}
		 try {
				imgSUD = ImageIO.read(new File("SUD.png"));
			} catch (IOException e)
			{
				System.out.println("No Image");
			}
	 }
	  
	 public int getX() {
		 return this.x;
	 }
	 
	 public int getY() {
		 return this.y;
	 }
	 public void collision(Shadow B) {
		 int dx = (x-B.x) + (xa-B.xa);
		 int dy = (y-B.y) + (ya-B.ya);
		 //if the balls collide...
		 if (Math.sqrt(dx*dx+dy*dy)<=d)
		 {
		 //switch velocities
		 int tempxa = xa;
		 int tempya = ya;
		 xa = B.xa;
		 ya = B.ya;
		 B.xa = tempxa;
		 B.ya = tempya;
		 }
		} 
	 
	 
	 
}
